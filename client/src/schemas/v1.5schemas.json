
{
  "participants": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Participant",
    "description": "Schema for the Participant table, detailing all aspects of participant data management in the GREGoR research project.",
    "type": "object",
    "properties": {
      "participant_id": {
        "type": "string",
        "description": "Subject/Participant Identifier (primary key). Anticipate using RC-assigned ID prefixed by gregor_center value.",
        "examples": ["BCM_Subject_1", "BROAD_subj89054"]
      },
      "internal_project_id": {
        "type": "array",
        "description": "An identifier used by GREGoR research centers to identify a set of participants for their internal tracking",
        "items": {
          "type": "string"
        },
        "examples": ["UWCDR_uwcmg_distal_arthrogryposis_type 1_212", "UWCDR_uwcmg_sponastrime_dysplasia_487"]
      },
      "gregor_center": {
        "type": "string",
        "description": "GREGoR Center to which the participant is originally associated",
        "enum": ["BCM", "BROAD", "CNH_I", "UCI", "UW_CRDR", "GSS", "UW_DCC"]
      },
      "consent_code": {
        "type": "string",
        "description": "Consent group pertaining to this participant's data",
        "enum": ["GRU", "HMB"]
      },
      "recontactable": {
        "type": "string",
        "description": "Is the originating GREGoR Center likely able to recontact this participant",
        "enum": ["Yes", "No"],
        "default": "No"
      },
      "prior_testing": {
        "type": "array",
        "description": "Text description of any genetic testing for individual conducted prior to enrollment",
        "items": {
          "type": "string"
        },
        "examples": ["Normal karyotype", "FBN2 screened clinically"]
      },
      "pmid_id": {
        "type": "array",
        "description": "Case specific PubMed ID if applicable",
        "items": {
          "type": "string"
        },
        "examples": ["25683120"]
      },
      "family_id": {
        "type": "string",
        "description": "Identifier for family",
        "examples": ["CNH-I_fam89052", "UW_CRDR_Family_2"]
      },
      "paternal_id": {
        "type": "string",
        "description": "participant_id for father; 0 if not available",
        "examples": ["BCM_Subject_1", "0"]
      },
      "maternal_id": {
        "type": "string",
        "description": "participant_id for mother; 0 if not available",
        "examples": ["BROAD_subj89054", "0"]
      },
      "twin_id": {
        "type": "array",
        "description": "participant_id for twins, triplets, etc; 0 if not available",
        "items": {
          "type": "string"
        },
        "examples": ["BROAD_subj89054|BROAD_subj89055"]
      },
      "proband_relationship": {
        "type": "string",
        "description": "Text description of individual relationship to proband in family, especially useful to capture relationships when connecting distant relatives and connecting relatives not studied",
        "enum": ["Self", "Mother", "Father", "Sibling", "Child", "Maternal Half Sibling", "Paternal Half Sibling", "Maternal Grandmother", "Maternal Grandfather", "Paternal Grandmother", "Paternal Grandfather", "Maternal Aunt", "Maternal Uncle", "Paternal Aunt", "Paternal Uncle", "Niece", "Nephew", "Maternal 1st Cousin", "Paternal 1st Cousin", "Other", "Unknown"]
      },
      "proband_relationship_detail": {
        "type": "string",
        "description": "Other proband relationship not captured in enumeration above"
      },
      "sex": {
        "type": "string",
        "description": "Biological sex assigned at birth (aligned with All of Us). If individual has a known DSD / not expected sex chromosome karyotype, this can be noted in the phenotype information section.",
        "enum": ["Female", "Male", "Unknown"]
      },
      "sex_detail": {
        "type": "string",
        "description": "Optional free-text field to describe known discrepancies between 'sex' value (female=>XX, male=>XY) and actual sex chromosome karyotype"
      },
      "reported_race": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": ["American Indian or Alaska Native", "Asian", "Black or African American", "Native Hawaiian or Other Pacific Islander", "Middle Eastern or North African", "White"]
        },  
        "description": "Self/submitter-reported race (OMB categories)"
      },
      "reported_ethnicity": {
        "type": "string",
        "description": "Self/submitter-reported ethnicity (OMB categories)"
      },
      "ancestry_detail": {
        "type": "string",
        "description": "Additional specific ancestry description free text beyond what is captured by OMB race/ethnicity categories"
      },
      "age_at_last_observation": {
        "type": "number",
        "description": "Age at last observation, aka age in years at the last time the center can vouch for the accuracy phenotype data. For conditions with later age of onset, this field lets users know if individuals marked as unaffected were younger or older than the age when the phenotype is expected to appear"
      },
      "affected_status": {
        "type": "string",
        "description": "Indicate affected status of individual (overall with respect to primary phenotype in the family). Note: Affected participants must have entry in phenotype table.",
        "enum": ["Affected", "Unaffected", "Possibly affected", "Unknown"]
      },
      "phenotype_description": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "human-readable 'Phenotypic one-line summary' for why this individual is of interest. Could be the same as the term_details value in the Phenotype table. Strongly encourage/required for proband."
      },
      "age_at_enrollment": {
        "type": "number",
        "description": "age in years at which consent was originally obtained"
      },
      "solve_status": {
        "type": "string",
        "description": "Indication of whether the submitting RC considers this case 'solved'",
        "enum": ["Solved", "Partially solved", "Probably solved", "Unsolved", "Unaffected"]
      },
      "missing_variant_case": {
        "type": "string",
        "description": "Indication of whether this is known to be a missing variant case, see notes for a description of the Missing Variant Project and inclusion criteria.",
        "enum": ["Yes", "No", "Unknown"]
      },
      "missing_variant_details": {
        "type": "string",
        "description": "For missing variant cases, indicate gene(s) or region of interest and reason for inclusion in MVP."
      }
    },
    "required": [
      "participant_id",
      "gregor_center",
      "consent_code",
      "family_id",
      "paternal_id",
      "maternal_id",
      "proband_relationship",
      "sex",
      "affected_status",
      "solve_status",
      "missing_variant_case"
    ]
  },
  "families":{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Family",
    "description": "Schema for the Family table, representing family records including consanguinity and pedigree details.",
    "type": "object",
    "properties": {
      "family_id": {
        "type": "string",
        "description": "Identifier for family (primary key). Needs to be Unique across centers, use participant.gregor_center as ID prefix.",
        "examples": ["CNH-I_fam89052", "UW_CRDR_Family_2"]
      },
      "consanguinity": {
        "type": "string",
        "description": "Indicate if consanguinity is present or suspected within a family",
        "enum": ["None suspected", "Suspected", "Present", "Unknown"]
      },
      "consanguinity_detail": {
        "type": "string",
        "description": "Free text description of any additional consanguinity details",
        "examples": ["Parents are second cousins once removed"]
      },
      "pedigree_file": {
        "type": "string",
        "description": "Name of file (renamed from pedigree_image because it can contain a PED file or image). Pedigree file should be deposited to upload workspace.",
        "examples": [
          "gs://fc-eb352699-d849-483f-aefe-9d35ce2b21ac/FamilyID_CMG_Site_PhsID_ConsentGroup_YYYYMMDD_YXQX.pdf",
          "gs://fc-eb352699-d849-483f-aefe-9d35ce2b21ac/FamilyID_CMG_Site_PhsID_ConsentGroup_YYYYMMDD_YXQX.ped"
        ]
      },
      "pedigree_file_detail": {
        "type": "string",
        "description": "Free text description of other family structure/pedigree file caption or legend. Clarifying purpose: sometimes no PED file is available and the effort involved to encode a full pedigree is high when an image is already available (i.e. legacy publication describing the family).",
        "examples": ["Additional informative family members not sequenced. Sequenced individuals indicated with sample_ID."]
      },
      "family_history_detail": {
        "type": "string",
        "description": "Details about family history that do not fit into structured fields. Family relationship terms should be relative to the proband. Useful if extended family history suggestive of mode of inheritance."
      }
    },
    "required": ["family_id", "consanguinity", "pedigree_file"]
  },
  "genetic_findings": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Genetic Findings",
    "description": "Schema for genetic findings related to participants in genetic research.",
    "type": "object",
    "properties": {
        "genetic_findings_id": {
            "type": "string",
            "description": "Unique identifier for the genetic findings in this participant. Encourage conventional naming (genomic coordinate + participant id)"
        },
        "participant_id": {
            "type": "string",
            "description": "Identifier for the participant associated with this genetic finding."
        },
        "experiment_id": {
            "type": "string",
            "description": "Identifier for the experiment where the genetic finding was identified."
        },
        "variant_type": {
            "type": "string",
            "enum": ["SNV/INDEL", "RE", "SV"],
            "description": "Type of genetic variant."
        },
        "sv_type": {
            "type": "string",
            "description": "Specific type of structural variant, if applicable."
        },
        "variant_reference_assembly": {
            "type": "string",
            "description": "The genome build used for identifying the variant's position."
        },
        "chrom": {
            "type": "string",
            "enum": ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "X", "Y", "MT"],
            "description": "Chromosome on which the variant is located."
        },
        "chrom_end": {
            "type": "string",
            "description": "End position of the chromosome where the structural variant ends."
        },
        "pos": {
            "type": "integer",
            "description": "Start position of the variant on the chromosome."
        },
        "pos_end": {
            "type": "integer",
            "description": "End position of the variant on the chromosome."
        },
        "ref": {
            "type": "string",
            "description": "Reference allele of the variant."
        },
        "alt": {
            "type": "string",
            "description": "Alternate allele of the variant."
        },
        "copy_number": {
            "type": "integer",
            "description": "Copy number variation if applicable."
        },
        "ClinGen_allele_ID": {
            "type": "string",
            "description": "ClinGen Allele ID for cross-table reference."
        },
        "gene_of_interest": {
            "type": "string",
            "description": "HGNC approved symbol of the known or candidate gene(s) relevant for the phenotype."
        },
        "transcript": {
            "type": "string",
            "description": "Description of transcript overlapping the variant."
        },
        "hgvsc": {
            "type": "string",
            "description": "HGVS c. notation description of the variant."
        },
        "hgvsp": {
            "type": "string",
            "description": "HGVS p. notation description of the variant."
        },
        "hgvs": {
            "type": "string",
            "description": "Genomic HGVS description of the variant."
        },
        "zygosity": {
            "type": "string",
            "enum": ["Heterozygous", "Homozygous", "Hemizygous", "Heteroplasmy", "Homoplasmy", "Mosaic", "Unknown"],
            "description": "Zygosity of the variant."
        },
        "allele_balance_or_heteroplasmy_percentage": {
            "type": "number",
            "description": "Reported allele balance (mosaic) or heteroplasmy percentage (mitochondrial)."
        },
        "variant_inheritance": {
            "type": "string",
            "enum": ["de novo", "maternal", "paternal", "biparental", "nonmaternal", "nonpaternal", "unknown"],
            "description": "Detection of variant in parents."
        },
        "linked_variant": {
            "type": "string",
            "description": "Second variant in recessive cases."
        },
        "linked_variant_phase": {
            "type": "string",
            "description": "Phase of linked variants."
        },
        "gene_known_for_phenotype": {
            "type": "string",
            "description": "Indicates if the gene listed is a candidate or known disease gene."
        },
        "known_condition_name": {
            "type": "string",
            "description": "Free text of condition name consistent with the variant/phenotype/inheritance."
        },
        "condition_id": {
            "type": "string",
            "description": "MONDO/OMIM number for condition used for variant interpretation."
        },
        "condition_inheritance": {
            "type": "string",
            "description": "Description of the expected inheritance of condition used for variant interpretation."
        },
        "GREGoR_variant_classification": {
            "type": "string",
            "description": "Clinical significance of variant described to condition listed as determined by the RC's variant curation."
        },
        "GREGoR_ClinVar_SCV": {
            "type": "string",
            "description": "ClinVar accession number for the variant curation submitted by your center."
        },
        "gene_disease_validity": {
            "type": "string",
            "description": "Validity assessment of the gene-disease relationship."
        },
        "public_database_other": {
            "type": "string",
            "description": "Public databases that this variant in this participant has been submitted by the RC."
        },
        "public_database_ID_other": {
            "type": "string",
            "description": "Public database variant/case ID."
        },
        "phenotype_contribution": {
            "type": "string",
            "description": "Contribution of variant-linked condition to participant's phenotype."
        },
        "partial_contribution_explained": {
            "type": "array",
            "description": "List of specific phenotypes explained by the condition associated with this variant/gene in cases of partial contribution.",
            "items": {
                "type": "string"
            }
        },
        "additional_family_members_with_variant": {
            "type": "array",
            "description": "List of related participant IDs carrying the same variant.",
            "items": {
                "type": "string"
            }
        },
        "method_of_discovery": {
            "type": "string",
            "description": "The method/assay(s) used to identify the candidate."
        },
        "notes": {
            "type": "string",
            "description": "Free text field to explain edge cases or discovery updates or list parallel experiment IDs or list parental allele balance when mosaic... etc."
        }
    },
    "required": [
        "genetic_findings_id",
        "participant_id",
        "variant_type",
        "chrom",
        "pos",
        "ref",
        "alt",
        "transcript",
        "hgvsc",
        "variant_inheritance",
        "gene_known_for_phenotype"
    ],
    "allOf": [
        {
            "if": {
                "properties": { "gene_known_for_phenotype": { "const": "Known" } }
            },
            "then": {
                "required": ["known_condition_name", "condition_id"]
            }
        },
        {
            "if": {
                "properties": { "phenotype_contribution": { "const": "Partial" } }
            },
            "then": {
                "required": ["partial_contribution_explained"]
            }
          }
      ]
  },
  "analytes": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Analyte",
    "description": "Schema for an analyte derived from a primary biosample source in genetic research projects.",
    "type": "object",
    "properties": {
        "analyte_id": {
            "type": "string",
            "description": "Identifier for an analyte from a primary biosample source (primary key)",
            "examples": ["Broad_COL_FAM1_1_D1", "Broad_COL_FAM1_1_R1", "GSS_201938-01-021"]
        },
        "participant_id": {
            "type": "string",
            "description": "Identifier for the participant from whom the biosample was taken"
        },
        "analyte_type": {
            "type": "string",
            "description": "Analyte derived from the primary biosample. The actual thing you're sticking into a machine to analyze/sequence",
            "enum": ["DNA", "RNA", "cDNA", "blood plasma", "frozen whole blood", "high molecular weight DNA", "urine"],
            "examples": ["DNA"]
        },
        "analyte_processing_details": {
            "type": "string",
            "description": "Details about how the analyte or original biosample was extracted or processed"
        },
        "primary_biosample": {
            "type": "string",
            "enum": ["UBERON:0000479", "UBERON:0003714", "UBERON:0001836", "UBERON:0001003", "UBERON:0002385", "UBERON:0000178", "UBERON:0002371", "UBERON:0006956", "UBERON:0001359", "UBERON:0001088", "UBERON:0019306", "CL: 0000034", "CL: 0000576", "CL: 0000542", "CL: 0000057", "UBERON: 0005291", "CL: 0011020", "UBERON: 0002037", "UBERON: 0001133"],
            "description": "Tissue type of biosample taken from the participant that the analyte was extracted or processed from. Contact the GREGoR Data Standards WG to expand the list of allowable UBERON codes. Currently allowed values are:\nUBERON:0000479 (tissue) \nUBERON:0003714 (neural tissue) \nUBERON:0001836 (saliva) \nUBERON:0001003 (skin epidermis) \nUBERON:0002385 (muscle tissue) \nUBERON:0000178 (whole blood) \nUBERON:0002371 (bone marrow) \nUBERON:0006956 (buccal mucosa)\nUBERON:0001359 (cerebrospinal fluid)\nUBERON:0001088 (urine)\nUBERON:0019306 (nose epithelium)\nCL: 0000034 (iPSC)\nCL: 0000576 (monocytes - PBMCs)\nCL: 0000542 (lymphocytes - LCLs)\nCL: 0000057 (fibroblasts)\nUBERON: 0005291 (embryonic tissue)\nCL: 0011020 (iPSC NPC)\nUBERON: 0002037 (cerebellum tissue)\nUBERON: 0001133 (cardiac tissue)"
        },
        "primary_biosample_id": {
            "type": "string",
            "description": "Optional ID for the biosample; allows for linking of multiple analytes extracted or processed from the same biosample"
        },
        "primary_biosample_details": {
            "type": "string",
            "description": "Free text to capture information not in structured fields"
        },
        "tissue_affected_status": {
            "type": "string",
            "enum": ["Yes", "No"],
            "description": "If applicable to disease (suspected mosaic), is the tissue from an affected source or an unaffected source?"
        },
        "age_at_collection": {
            "type": "number",
            "description": "Age of participant in years at biosample collection"
        },
        "participant_drugs_intake": {
            "type": "string",
            "description": "The list of drugs patient is on, at the time of sample collection. Helpful during analysis of metabolomics and immune assays"
        },
        "participant_special_diet": {
            "type": "string",
            "description": "If the patient was fasting, when the sample was collected. Relevant when analyzing metabolomics data"
        },
        "hours_since_last_meal": {
            "type": "number",
            "description": "Hours since last meal, relevant when analyzing metabolomics data"
        },
        "passage_number": {
            "type": "integer",
            "description": "Passage number is relevant for fibroblast cultures and possibly iPSC."
        },
        "time_to_freeze": {
            "type": "number",
            "description": "Time (in hours) from collection to freezing the sample. Delayed freeze turns out to be useful / important info for PaxGene blood (for RNA isolation)."
        },
        "sample_transformation_detail": {
            "type": "string",
            "description": "Details regarding sample transformation"
        },
        "quality_issues": {
            "type": "string",
            "description": "Freetext (limited characters) to concisely describe if there are any QC issues that would be important to note"
        },
        "internal_analyte_id": {
            "type": "array",
            "description": "Identifier for an analyte from a primary biosample source (primary key)",
            "examples": ["Broad_COL_FAM1_1_D1", "Broad_COL_FAM1_1_R1", "GSS_201938-01-021"]
        }
    },
    "required": [
        "analyte_id",
        "participant_id",
        "analyte_type",
        "primary_biosample"
    ]
  },
  "phenotypes": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Phenotype",
    "type": "object",
    "properties": {
        "phenotype_id": {
            "type": "string",
            "description": "Unique identifier for the phenotype entry.This ID generated when loading into AnVIL data table and is not included in the uploaded .tsv file"
        },
        "participant_id": {
            "type": "string",
            "description": "Identifier for the participant associated with this phenotype."
        },
        "term_id": {
            "type": "string",
            "description": "Identifier for the term within the ontology used to describe the phenotype."
        },
        "presence": {
            "type": "string",
            "enum": ["Present", "Absent", "Unknown"],
            "description": "Indicates if the phenotype is present, absent, or unknown."
        },
        "ontology": {
            "type": "string",
            "enum": ["HPO", "MONDO", "OMIM", "ORPHANET", "SNOMED", "ICD10"],
            "description": "The ontology used to classify the phenotype term."
        },
        "additional_details": {
            "type": "string",
            "description": "Additional details about the phenotype that are not supported/available as a term in the specified ontology."
        },
        "onset_age_range": {
            "type": "string",
            "enum": ["HP:0003581", "HP:0030674", "HP:0011463", "HP:0003577", "HP:0025708", "HP:0011460", "HP:0011461", "HP:0003593", "HP:0025709", "HP:0003621", "HP:0034199", "HP:0003584", "HP:0025710", "HP:0003596", "HP:0003623", "HP:0410280", "HP:4000040", "HP:0034198", "HP:0034197", "HP:0011462"],
            "description": "The age range at which the phenotype onset occurs."
        },
        "additional_modifiers": {
            "type": "string",
            "description": "Additional modifiers that further specify the phenotype."
        },
        "syndromic": {
            "type": "string",
            "enum": ["syndromic", "non-syndromic"],
            "description": "Indicates if the phenotype is part of a syndromic condition."
        }
    },
    "required": ["phenotype_id", "participant_id", "term_id", "presence", "ontology"]
  },
  "experiments": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Experiment",
    "type": "object",
    "properties": {
      "experiment_id": {
        "type": "string",
        "description": "table_name.experiment_id_in_table",
        "examples": ["experiment_dna_short_read.GSS201938-01-021-SG-1"]
      },
      "table_name": {
        "type": "string",
        "description": "Specifies the experiment table",
        "enum": [
          "experiment_dna_short_read",
          "experiment_rna_short_read",
          "experiment_nanopore",
          "experiment_pac_bio",
          "experiment_atac_short_read"
        ],
        "examples": ["experiment_dna_short_read"]
      },
      "id_in_table": {
        "type": "string",
        "description": "Unique identifier within the specific experiment table",
        "examples": ["GSS201938-01-021-SG-1"]
      },
      "participant_id": {
        "type": "string",
        "description": "Subject/Participant Identifier within project",
        "examples": ["GSS201938"]
      }
    },
    "required": ["experiment_id", "table_name", "id_in_table", "participant_id"]
  }
}
