# Generated by Django 5.0.1 on 2025-04-28 16:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("metadata", "0001_initial"),
        ("submodels", "0002_alignedid_experimentid"),
    ]

    operations = [
        migrations.AlterField(
            model_name="biobank",
            name="specimen_type",
            field=models.CharField(
                choices=[
                    ("D", "EDTA in Cryovial"),
                    ("R", "PAX Tube"),
                    ("OG", "OGR-500 saliva collection kit"),
                    ("SC", "OCD-100 buccal collection kit"),
                    ("SG", "OGR-675 saliva collection kit"),
                    ("X", "Extracted DNA"),
                    ("XR", "Extracted RNA"),
                ],
                help_text="Analyte codes printed on biospecimen containers",
                max_length=10,
            ),
        ),
        migrations.CreateModel(
            name="ExperimentStage",
            fields=[
                (
                    "experiment_stage_id",
                    models.CharField(
                        help_text="Analyte ID for tracking experiments once they start",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "test_indication",
                    models.CharField(
                        blank=True,
                        help_text="Ambry shipping manifest requirement. Research or Clinical",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "requested_test",
                    models.CharField(
                        blank=True,
                        help_text="Ambry test code. 10500 for LR-WGS. 10525 for WTS",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "collection_date",
                    models.DateField(help_text="Date when the biosample was created"),
                ),
                (
                    "specimen_type",
                    models.CharField(
                        choices=[
                            ("D", "EDTA in Cryovial"),
                            ("R", "PAX Tube"),
                            ("SC", "OCD-100 buccal collection kit"),
                            ("SG", "OGR-675 saliva collection kit"),
                            ("X", "Extracted DNA"),
                            ("XR", "Extracted RNA"),
                        ],
                        help_text="Analyte codes printed on biospecimen containers",
                        max_length=10,
                    ),
                ),
                (
                    "shipment_date",
                    models.DateField(
                        blank=True,
                        help_text="Date when an analyte was shipped out to a sequencing provider",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending shipment", "Pending shipment"),
                            ("Shipped", "Shipped"),
                            ("Received", "Received"),
                            ("Accessioned", "Accessioned"),
                            ("Extracted", "Extracted"),
                            ("Sequenced", "Sequenced"),
                            ("Data delivered", "Data delivered"),
                            ("Replacement requested", "Replacement requested"),
                            ("QC Issue", "QC Issue - see comments"),
                        ],
                        help_text="Notes: See participant_sample_status table in retool",
                        max_length=100,
                    ),
                ),
                (
                    "current_location",
                    models.CharField(
                        blank=True,
                        help_text="Current analyte location. i.e. UCI, Ambry, etc.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        blank=True,
                        help_text="Fedex tracking number if available",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True,
                        help_text="Ambry identifier or similar",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="Freetext (limited characters) to concisely describe if there are any\nQC issues that would be important to note",
                        null=True,
                    ),
                ),
                (
                    "internal_analysis",
                    models.TextField(
                        blank=True,
                        help_text="Freetext to describe what analysis pipelines have been done on this case",
                        null=True,
                    ),
                ),
                (
                    "alignments_list",
                    models.ManyToManyField(
                        blank=True,
                        help_text="List of associated sr-gs, pacbio, nanopore, etc. alignment objects",
                        related_name="aligned",
                        to="submodels.alignedid",
                    ),
                ),
                (
                    "analyte_id",
                    models.ForeignKey(
                        help_text="Identifier for the analyte used in the experiment.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="metadata.analyte",
                    ),
                ),
                (
                    "experiments_list",
                    models.ManyToManyField(
                        blank=True,
                        help_text="List of associated sr-gs, pacbio, nanopore, etc. experiment objects",
                        related_name="experiment",
                        to="submodels.experimentid",
                    ),
                ),
            ],
        ),
    ]
