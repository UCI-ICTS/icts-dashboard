# Generated by Django 5.0.1 on 2024-06-06 14:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('metadata', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Analyte',
            fields=[
                ('analyte_id', models.CharField(help_text='Identifier for an analyte from a primary biosample source', max_length=255, primary_key=True, serialize=False)),
                ('analyte_type', models.CharField(choices=[('DNA', 'DNA'), ('RNA', 'RNA'), ('cDNA', 'cDNA'), ('blood plasma', 'blood plasma'), ('frozen whole blood', 'frozen whole blood'), ('high molecular weight DNA', 'high molecular weight DNA'), ('urine', 'urine')], help_text="Analyte derived from the primary biosample. The actual thing you're sticking into a machine to analyze/sequence", max_length=50)),
                ('analyte_processing_details', models.TextField(help_text='Details about how the analyte or original biosample was extracted or processed')),
                ('primary_biosample', models.CharField(choices=[('UBERON:0000479', 'tissue'), ('UBERON:0003714', 'neural tissue'), ('UBERON:0001836', 'saliva'), ('UBERON:0001003', 'skin epidermis'), ('UBERON:0002385', 'muscle tissue'), ('UBERON:0000178', 'whole blood'), ('UBERON:0002371', 'bone marrow'), ('UBERON:0006956', 'buccal mucosa'), ('UBERON:0001359', 'cerebrospinal fluid'), ('UBERON:0001088', 'urine'), ('UBERON:0019306', 'nose epithelium'), ('CL:0000034', 'iPSC'), ('CL:0000576', 'monocytes - PBMCs'), ('CL:0000542', 'lymphocytes - LCLs'), ('CL:0000057', 'fibroblasts'), ('UBERON:0005291', 'embryonic tissue'), ('CL:0011020', 'iPSC NPC'), ('UBERON:0002037', 'cerebellum tissue'), ('UBERON:0001133', 'cardiac tissue')], help_text='Tissue type of biosample taken from the participant that the analyte was extracted or processed from', max_length=100)),
                ('primary_biosample_id', models.CharField(blank=True, help_text='Optional ID for the biosample; allows for linking of multiple analytes extracted or processed from the same biosample', max_length=255)),
                ('primary_biosample_details', models.TextField(blank=True, help_text='Free text to capture information not in structured fields')),
                ('tissue_affected_status', models.BooleanField(default=False, help_text='If applicable to disease (suspected mosaic), indicates if the tissue is from an affected source.')),
                ('age_at_collection', models.FloatField(help_text='Age of participant in years at biosample collection')),
                ('participant_drugs_intake', models.TextField(help_text='The list of drugs patient is on, at the time of sample collection. Helpful during analysis of metabolomics and immune assays')),
                ('participant_special_diet', models.TextField(help_text='If the patient was fasting, when the sample was collected. Relevant when analyzing metabolomics data')),
                ('hours_since_last_meal', models.FloatField(help_text='Hours since last meal, relevant when analyzing metabolomics data')),
                ('passage_number', models.IntegerField(help_text='Passage number is relevant for fibroblast cultures and possibly iPSC.')),
                ('time_to_freeze', models.FloatField(help_text='Time (in hours) from collection to freezing the sample. Delayed freeze turns out to be useful / important info for PaxGene blood (for RNA isolation).')),
                ('sample_transformation_detail', models.TextField(help_text='Details regarding sample transformation')),
                ('quality_issues', models.TextField(help_text='Freetext (limited characters) to concisely describe if there are any QC issues that would be important to note')),
                ('participant', models.ForeignKey(help_text='The participant from whom the biosample was taken', on_delete=django.db.models.deletion.CASCADE, to='metadata.participant')),
            ],
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('experiment_id', models.CharField(help_text='Unique ID of this experiment instance combining the table name and an ID within the table.', max_length=255, primary_key=True, serialize=False)),
                ('table_name', models.CharField(choices=[('experiment_dna_short_read', 'DNA Short Read'), ('experiment_rna_short_read', 'RNA Short Read'), ('experiment_nanopore', 'Nanopore'), ('experiment_pac_bio', 'Pac Bio'), ('experiment_atac_short_read', 'ATAC Short Read')], help_text='Specifies the experiment table.', max_length=50)),
                ('id_in_table', models.CharField(help_text='Unique identifier within the specific experiment table.', max_length=255)),
                ('participant', models.ForeignKey(help_text='References the participant associated with this experiment.', on_delete=django.db.models.deletion.CASCADE, to='metadata.participant')),
            ],
        ),
    ]
